apiVersion: apps/v1
kind: Deployment
metadata:
  name: rearc-deployment
  labels:
    app: rearc
spec:
  replicas: 4
  selector:
    matchLabels:
      app: rearc
  template:
    metadata:
      labels:
        app: rearc
    spec:
      containers:
      - name: rearc
        image: 629354604262.dkr.ecr.us-west-2.amazonaws.com/rearc/quest:latest
        env:
          - name: SECRET_WORD
            value: "TwelveFactor"
        ports:
          - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: rearc-lb
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: rearc
---
apiVersion: v1
kind: Service
metadata:
  name: rearc-np
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: rearc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rearc-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/load-balancer-name: rearc-ingress
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:629354604262:certificate/064dc7c7-24d8-4794-9ab6-5e13591c9594
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/subnets: subnet-54970a2c, subnet-c717a88d, subnet-8e98f4d3, subnet-d316f2f9
spec:
  defaultBackend:
    resource:
      apiGroup: k8s.example.com
      kind: Service
      name: rearc-lb
  rules:
    - host: hamdance.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: 
                name: ssl-redirect
                port: 
                  name: use-annotation
          - path: /
            pathType: Prefix
            backend:
              service:  
                name: rearc-np
                port: 
                  number: 80